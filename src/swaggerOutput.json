{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Lazer Escort REST API Documentation",
    "description": "Implementation of Swagger with TypeScript"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": ""
    }
  ],
  "paths": {
    "/client/findMatches": {
      "get": {
        "tags": [
          "Home Screen"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              }
            }
          }
        }
      }
    },
    "/client/getUsers": {
      "get": {
        "tags": [
          "Home Screen"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              }
            }
          }
        }
      }
    },
    "/client/login": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientLoginResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClientLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        }
      }
    },
    "/client/register": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientLoginResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClientLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientSignupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClientSignupRequest"
              }
            }
          }
        }
      }
    },
    "/client/recoverPassword": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            }
          }
        }
      }
    },
    "/client/changePassword": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        }
      }
    },
    "/client/loginWithFacebook": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/client/loginWithDiscord": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/client/loginWithGoogle": {
      "post": {
        "tags": [
          "Login Screens"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/client/upgradePro": {
      "post": {
        "tags": [
          "Upload Profile Image"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeProRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeProRequest"
              }
            }
          }
        }
      }
    },
    "/client/userProfile/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidSession"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidSession"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              }
            }
          }
        }
      }
    },
    "/client/payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidSession"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidSession"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotExists"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "usernameEmail": {
            "type": "string",
            "example": "prmpsmart@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "pass-string"
          }
        },
        "required": [
          "usernameEmail",
          "password"
        ],
        "xml": {
          "name": "LoginRequest"
        }
      },
      "ClientSignupRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Mirac"
          },
          "lastName": {
            "type": "string",
            "example": "Tim"
          },
          "username": {
            "type": "string",
            "example": "prmpsmart"
          },
          "email": {
            "type": "string",
            "example": "prmpsmart@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "pass-string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "username",
          "email",
          "password"
        ],
        "xml": {
          "name": "ClientSignupRequest"
        }
      },
      "EscortSignupRequest": {
        "type": "object",
        "properties": {
          "workingName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "prmpsmart@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "pass-string"
          }
        },
        "required": [
          "workingName",
          "email",
          "password"
        ],
        "xml": {
          "name": "EscortSignupRequest"
        }
      },
      "RecoverPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "prmpsmart@gmail.com"
          }
        },
        "required": [
          "email"
        ],
        "xml": {
          "name": "RecoverPasswordRequest"
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "prmpsmart@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "pass-string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "xml": {
          "name": "ChangePasswordRequest"
        }
      },
      "UpgradeProRequest": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "example": [
              "base64 encoded image string"
            ],
            "items": {
              "type": "string"
            }
          },
          "height": {
            "type": "number",
            "example": 9.8
          },
          "country": {
            "type": "string",
            "example": "Germany"
          },
          "birthday": {
            "type": "string",
            "example": "26/07/1999"
          },
          "hairColor": {
            "type": "string",
            "example": "brown"
          },
          "gender": {
            "type": "string",
            "example": "male"
          }
        },
        "required": [
          "images",
          "height",
          "country",
          "birthday",
          "hairColor",
          "gender"
        ],
        "xml": {
          "name": "UpgradeProRequest"
        }
      },
      "FindEscortsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "username": {
            "type": "string",
            "example": "string"
          },
          "lookingFor": {
            "type": "string",
            "example": "string"
          },
          "ageStart": {
            "type": "string",
            "example": "number"
          },
          "ageEnd": {
            "type": "string",
            "example": "number"
          },
          "distance": {
            "type": "string",
            "example": "number"
          },
          "age": {
            "type": "string",
            "example": "number"
          },
          "hair": {
            "type": "string",
            "example": "string"
          },
          "rates": {
            "type": "string",
            "example": "number"
          },
          "breast": {
            "type": "string",
            "example": "string"
          },
          "travel": {
            "type": "string",
            "example": "string"
          },
          "weight": {
            "type": "string",
            "example": "number"
          },
          "height": {
            "type": "string",
            "example": "number"
          },
          "services": {
            "type": "string",
            "example": "string"
          },
          "ethnic": {
            "type": "string",
            "example": "string"
          },
          "languages": {
            "type": "string",
            "example": "string"
          },
          "preferences": {
            "type": "string",
            "example": "string"
          },
          "withReviews": {
            "type": "string",
            "example": "boolean"
          },
          "verfied": {
            "type": "string",
            "example": "boolean"
          },
          "newComers": {
            "type": "string",
            "example": "boolean"
          },
          "withVideos": {
            "type": "string",
            "example": "boolean"
          },
          "pornStar": {
            "type": "string",
            "example": "boolean"
          },
          "independent": {
            "type": "string",
            "example": "boolean"
          },
          "seenLastWeek": {
            "type": "string",
            "example": "boolean"
          },
          "doWithGirl": {
            "type": "string",
            "example": "boolean"
          },
          "couple": {
            "type": "string",
            "example": "boolean"
          }
        },
        "required": [
          "name",
          "username",
          "lookingFor",
          "ageStart",
          "ageEnd",
          "distance"
        ],
        "xml": {
          "name": "FindEscortsRequest"
        }
      },
      "AdvertizeRequest": {
        "type": "object",
        "properties": {
          "whoAreYou": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "number": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string"
          },
          "sendCopy": {
            "type": "string",
            "example": "boolean"
          },
          "website": {
            "type": "string",
            "example": "string"
          },
          "city": {
            "type": "string",
            "example": "string"
          },
          "query": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "whoAreYou",
          "name",
          "number",
          "email",
          "sendCopy",
          "website",
          "city",
          "query"
        ],
        "xml": {
          "name": "AdvertizeRequest"
        }
      },
      "GetInTouchRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string"
          },
          "number": {
            "type": "string",
            "example": "string"
          },
          "message": {
            "type": "string",
            "example": "boolean"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "number",
          "message"
        ],
        "xml": {
          "name": "GetInTouchRequest"
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "Response"
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "image": {
              "type": "string",
              "example": "string"
            },
            "location": {
              "type": "string",
              "example": "string"
            },
            "name": {
              "type": "string",
              "example": "string"
            },
            "age": {
              "type": "string",
              "example": "string"
            },
            "id": {
              "type": "string",
              "example": "number"
            }
          }
        },
        "xml": {
          "name": "Users"
        }
      },
      "ClientLoginResponse": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string"
          },
          "token": {
            "type": "string",
            "example": "string"
          },
          "message": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "ClientLoginResponse"
        }
      },
      "EscortLoginResponse": {
        "type": "object",
        "properties": {
          "workingName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string"
          },
          "token": {
            "type": "string",
            "example": "string"
          },
          "message": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "EscortLoginResponse"
        }
      },
      "FindMatchesResponse": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "string"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "image": {
                  "type": "string",
                  "example": "string"
                },
                "location": {
                  "type": "string",
                  "example": "string"
                },
                "withReviews": {
                  "type": "string",
                  "example": "boolean"
                },
                "verfied": {
                  "type": "string",
                  "example": "boolean"
                },
                "newComers": {
                  "type": "string",
                  "example": "boolean"
                },
                "withVideos": {
                  "type": "string",
                  "example": "boolean"
                },
                "pornStar": {
                  "type": "string",
                  "example": "boolean"
                },
                "independent": {
                  "type": "string",
                  "example": "boolean"
                },
                "seenLastWeek": {
                  "type": "string",
                  "example": "boolean"
                },
                "doWithGirl": {
                  "type": "string",
                  "example": "boolean"
                },
                "couple": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        },
        "xml": {
          "name": "FindMatchesResponse"
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "personalDetails": {
            "type": "object",
            "properties": {
              "gender": {
                "type": "string",
                "example": "string"
              },
              "sexuality": {
                "type": "string",
                "example": "string"
              },
              "age": {
                "type": "string",
                "example": "number"
              },
              "nationality": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "physicalDetails": {
            "type": "object",
            "properties": {
              "chest": {
                "type": "string",
                "example": "string"
              },
              "waist": {
                "type": "string",
                "example": "string"
              },
              "hips": {
                "type": "string",
                "example": "string"
              },
              "ethnicity": {
                "type": "string",
                "example": "string"
              },
              "hairColour": {
                "type": "string",
                "example": "string"
              },
              "height": {
                "type": "string",
                "example": "number"
              },
              "weight": {
                "type": "string",
                "example": "number"
              },
              "eyeColour": {
                "type": "string",
                "example": "string"
              },
              "genetalia": {
                "type": "string",
                "example": "string"
              },
              "cupSize": {
                "type": "string",
                "example": "string"
              },
              "breastImplant": {
                "type": "string",
                "example": "string"
              },
              "bodyType": {
                "type": "string",
                "example": "string"
              },
              "bodyArt": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "languages": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "bookingNotes": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "incall": {
                "type": "string",
                "example": "string"
              },
              "outcall": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "string",
                    "example": "string"
                  },
                  "iTravelTo": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          },
          "price": {
            "type": "object",
            "properties": {
              "incall": {
                "type": "object",
                "properties": {
                  "hour1": {
                    "type": "string",
                    "example": "number"
                  },
                  "hour2": {
                    "type": "string",
                    "example": "number"
                  },
                  "hour3": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "outcall": {
                "type": "object",
                "properties": {
                  "hour1": {
                    "type": "string",
                    "example": "number"
                  },
                  "hour2": {
                    "type": "string",
                    "example": "number"
                  },
                  "hour3": {
                    "type": "string",
                    "example": "number"
                  }
                }
              }
            }
          },
          "availability": {
            "type": "object",
            "properties": {
              "monday": {
                "type": "string",
                "example": "boolean"
              },
              "tueday": {
                "type": "string",
                "example": "boolean"
              },
              "wednesday": {
                "type": "string",
                "example": "boolean"
              },
              "thurday": {
                "type": "string",
                "example": "boolean"
              },
              "friday": {
                "type": "string",
                "example": "boolean"
              },
              "saturday": {
                "type": "string",
                "example": "boolean"
              },
              "dunurday": {
                "type": "string",
                "example": "boolean"
              }
            }
          },
          "services": {
            "type": "array",
            "example": [
              "69",
              "blowjob",
              "couples services",
              "dildo play",
              "erotic massage",
              "golden shower",
              "hardcore domina",
              "striptease",
              "threesome"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "xml": {
          "name": "UserProfile"
        }
      },
      "InvalidSession": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid Session : Login again"
          }
        },
        "xml": {
          "name": "InvalidSession"
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request : Wrong format of payloads."
          }
        },
        "xml": {
          "name": "BadRequest"
        }
      },
      "InvalidCredentials": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid credentials"
          }
        },
        "xml": {
          "name": "InvalidCredentials"
        }
      },
      "UserNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User not found"
          }
        },
        "xml": {
          "name": "UserNotFound"
        }
      },
      "UserExists": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User already exists"
          }
        },
        "xml": {
          "name": "UserExists"
        }
      }
    }
  },
  "securitySchemes": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer"
    }
  }
}